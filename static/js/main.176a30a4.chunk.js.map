{"version":3,"sources":["History.js","Voltage.js","current.js","SOC.js","SOHR.js","SOHC.js","ContentGrid.js","lineChart.js","Picker.js","ZoomLineChart.js","ChartPaper.js","Content.js","dashboard.js","App.js","serviceWorker.js","Routes.js","index.js"],"names":["history","useStyles","makeStyles","root","position","width","height","top","left","transform","media","stat","marginBottom","VoltageCard","props","vol","parseFloat","latest","toFixed","time_stamp","len","length","substr","amount","data","className","onClick","push","pathname","state","dataKey","hoverable","bordered","Typography","gutterBottom","variant","component","style","marginTop","CurrentCard","SOCCard","SOHRCard","SOHCCard","theme","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","card","marginLeft","marginRight","PureComponent","TimePicker","onOk","bind","value","dateString","console","log","this","callback","RangePicker","DatePicker","showTime","format","onChange","ZoomLineChart","firstData","initialState","refAreaLeft","refAreaRight","animation","key","showKey","x_arr","i","document","body","clientWidth","clientHeight","nextProps","nextContext","newData","setState","next_arr","slice","e","activeLabel","err","right","range","userSelect","onMouseDown","handleAreaLeft","onMouseMove","handleAreaRight","onMouseUp","zoom","strokeDasharray","allowDecimals","type","domain","stroke","activeDot","r","x1","x2","strokeOpacity","zoomOut","ChartPaper","location","iniData","React","useState","showData","id","ContentPage","Dashboard","bound","isLoading","latestData","voltage","current","SOC","SOHR","SOHC","temp","voltageData","currentData","SOCData","SOHRData","SOHCData","fetch","then","v","lines","split","dataLines","lastCell","time","obj","obj2","obj3","obj4","obj5","cells","JSON","stringify","d","updated","Grid","container","item","lg","md","xs","size","percent","fontWeight","getData","href","title","src","App","Boolean","window","hostname","match","Routes","path","exact","Component","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.176a30a4.chunk.js","sourcesContent":["import { createBrowserHistory as history} from 'history';\n\nexport default history();","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Card } from 'antd';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Badge } from 'antd';\nimport { Statistic } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nimport history from './History'\nimport './Card.css'\n\n\nconst useStyles = makeStyles({\n    root: {\n        position:'relative',\n        width:'100%',\n        height:'100%',\n        top:'5%',\n        left:'5%',\n        transform: `translate(-5%,-5%)`,\n        // maxWidth: 400,\n        // height: 300,\n    },\n    media: {\n        height: 70,\n    },\n    stat:{\n        marginBottom:10,\n    }\n});\n\nexport default function VoltageCard(props) {\n    const classes = useStyles();\n\n    let vol = parseFloat(props.latest['voltage'])\n    vol = vol.toFixed(2)\n    let time_stamp = props.latest['time']\n    let len = time_stamp.length\n    time_stamp = time_stamp.substr(1,len-2)\n    let amount = props.data.length\n    let percentage = 0\n\n    if (props.data[amount-2]['voltage'] != 0){\n        percentage = (props.data[amount-1]['voltage']-props.data[amount-2]['voltage'])/props.data[amount-2]['voltage']\n    }\n\n    const handleOnclick = function(){\n        history.push({pathname:'/Chart',state:props.data, dataKey:'voltage'})\n    }\n\n\n    return (\n        <Card className=\"card\" onClick={handleOnclick} hoverable bordered>\n                <Typography gutterBottom variant=\"h5\" component=\"h1\">\n                    Voltage\n                </Typography>\n                <Typography style={{marginTop:10}} variant=\"h4\" component=\"h1\">\n                    {vol}\n                </Typography>\n        </Card>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Card} from 'antd';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Badge } from 'antd';\nimport { Statistic } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nimport history from './History'\nimport './Card.css'\n\n\nconst useStyles = makeStyles({\n    root: {\n        position:'relative',\n        width:'100%',\n        height:'100%',\n        top:'5%',\n        left:'5%',\n        transform: `translate(-5%,-5%)`,\n        // maxWidth: 400,\n        // height: 300,\n    },\n    media: {\n        height: 70,\n    },\n    stat:{\n        marginBottom:10,\n    }\n});\n\nexport default function CurrentCard(props) {\n    const classes = useStyles();\n\n    let vol = parseFloat(props.latest['current'])\n    vol = vol.toFixed(2)\n    let time_stamp = props.latest['time']\n    let len = time_stamp.length\n    time_stamp = time_stamp.substr(1,len-2)\n    let amount = props.data.length\n    let percentage = 0\n\n    if (props.data[amount-2]['current'] != 0){\n        percentage = (props.data[amount-1]['current']-props.data[amount-2]['current'])/props.data[amount-2]['current']\n    }\n\n    const handleOnclick = function(){\n        history.push({pathname:'/Chart',state:props.data, dataKey:'current'})\n    }\n\n\n    return (\n        <Card className=\"card\" onClick={handleOnclick} hoverable bordered>\n            <Typography gutterBottom variant=\"h5\" component=\"h1\">\n                Current\n            </Typography>\n            <Typography style={{marginTop:10}} variant=\"h4\" component=\"h1\">\n                {vol}\n            </Typography>\n        </Card>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Card} from 'antd';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Badge } from 'antd';\nimport { Statistic } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nimport history from './History'\nimport './Card.css'\n\n\nconst useStyles = makeStyles({\n    root: {\n        position:'relative',\n        width:'100%',\n        height:'100%',\n        top:'5%',\n        left:'5%',\n        transform: `translate(-5%,-5%)`,\n        // maxWidth: 400,\n        // height: 300,\n    },\n    media: {\n        height: 70,\n    },\n    stat:{\n        marginBottom:10,\n    }\n});\n\nexport default function SOCCard(props) {\n    const classes = useStyles();\n\n    let vol = parseFloat(props.latest['SOC'])\n    vol = vol.toFixed(2)\n    let time_stamp = props.latest['time']\n    let len = time_stamp.length\n    time_stamp = time_stamp.substr(1,len-2)\n    let amount = props.data.length\n    let percentage = 0\n\n    if (props.data[amount-2]['SOC'] != 0){\n        percentage = (props.data[amount-1]['SOC']-props.data[amount-2]['SOC'])/props.data[amount-2]['SOC']\n    }\n\n    const handleOnclick = function(){\n        history.push({pathname:'/Chart',state:props.data, dataKey:'SOC'})\n    }\n\n\n    return (\n        <Card className=\"card\" onClick={handleOnclick} hoverable bordered>\n            <Typography gutterBottom variant=\"h5\" component=\"h1\">\n                SOC\n            </Typography>\n            <Typography style={{marginTop:10}} variant=\"h4\" component=\"h1\">\n                {vol}\n            </Typography>\n        </Card>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Card} from 'antd';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Badge } from 'antd';\nimport { Statistic } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nimport history from './History'\nimport './Card.css'\n\n\nconst useStyles = makeStyles({\n    root: {\n        position:'relative',\n        width:'100%',\n        height:'100%',\n        top:'5%',\n        left:'5%',\n        transform: `translate(-5%,-5%)`,\n        // maxWidth: 400,\n        // height: 300,\n    },\n    media: {\n        height: 70,\n    },\n    stat:{\n        marginBottom:10,\n    }\n});\n\nexport default function SOHRCard(props) {\n    const classes = useStyles();\n\n    let vol = parseFloat(props.latest['SOHR'])\n    vol = vol.toFixed(2)\n    let time_stamp = props.latest['time']\n    let len = time_stamp.length\n    time_stamp = time_stamp.substr(1,len-2)\n    let amount = props.data.length\n    let percentage = 0\n\n    if (props.data[amount-2]['SOHR'] != 0){\n        percentage = (props.data[amount-1]['SOHR']-props.data[amount-2]['SOHR'])/props.data[amount-2]['SOHR']\n    }\n\n    const handleOnclick = function(){\n        history.push({pathname:'/Chart',state:props.data, dataKey:'SOHR'})\n    }\n\n\n    return (\n        <Card className=\"card\" onClick={handleOnclick} hoverable bordered>\n            <Typography gutterBottom variant=\"h5\" component=\"h1\">\n                SOHR\n            </Typography>\n            <Typography style={{marginTop:10}} variant=\"h4\" component=\"h1\">\n                {vol}\n            </Typography>\n        </Card>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Card} from 'antd';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport { Badge } from 'antd';\nimport { Statistic } from 'antd';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\nimport history from './History'\nimport './Card.css'\n\n\nconst useStyles = makeStyles({\n    root: {\n        position:'relative',\n        width:'100%',\n        height:'100%',\n        top:'5%',\n        left:'5%',\n        transform: `translate(-5%,-5%)`,\n        // maxWidth: 400,\n        // height: 300,\n    },\n    media: {\n        height: 70,\n    },\n    stat:{\n        marginBottom:10,\n    }\n});\n\nexport default function SOHCCard(props) {\n    const classes = useStyles();\n\n    let vol = parseFloat(props.latest['SOHC'])\n    vol = vol.toFixed(2)\n    let time_stamp = props.latest['time']\n    let len = time_stamp.length\n    time_stamp = time_stamp.substr(1,len-2)\n    let amount = props.data.length\n    let percentage = 0\n\n    if (props.data[amount-2]['SOHC'] != 0){\n        percentage = (props.data[amount-1]['SOHC']-props.data[amount-2]['SOHC'])/props.data[amount-2]['SOHC']\n    }\n\n    const handleOnclick = function(){\n        history.push({pathname:'/Chart',state:props.data, dataKey:'SOHC'})\n    }\n\n\n    return (\n        <Card className=\"card\" onClick={handleOnclick} hoverable bordered>\n            <Typography gutterBottom variant=\"h5\" component=\"h1\">\n                SOHC\n            </Typography>\n            <Typography style={{marginTop:10}} variant=\"h4\" component=\"h1\">\n                {vol}\n            </Typography>\n        </Card>\n    );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport VoltageCard from \"./Voltage\";\nimport { Card } from 'antd';\nimport { Progress, Row, Col } from 'antd';\nimport CurrentCard from \"./current\";\nimport SOCCard from \"./SOC\";\nimport SOHRCard from \"./SOHR\";\nimport SOHCCard from \"./SOHC\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    paper: {\n        padding: theme.spacing(2),\n        height:180,\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    card:{\n        marginLeft:10,\n        marginRight:0,\n        marginTop:0,\n        marginBottom:0,\n        height:180,\n    }\n}));\n\nexport default function CenteredGrid(props) {\n    const classes = useStyles();\n\n    //console.log(\"In grid:\",props.latest)\n    let updated = props.latest['time'];\n    const len = updated.length;\n    updated = updated.substr(1,len-2);\n\n    return (\n        <div className={classes.root}>\n            <Grid container spacing={3}>\n                <Grid item xs={12}>\n\n                    <Card bordered={false} style={{width:'60%',position:'relative',left:'50%',top:'50%',transform:[`translate(-50%,-50%)`]}}>\n\n                        <Grid container spacing={3}>\n                            <Grid container item xs={6} style={{position:'relative',left:'10%'}}>\n                                <Progress\n                                    type=\"circle\"\n                                    strokeColor={{\n                                        '0%': '#108ee9',\n                                        '100%': '#87d068',\n                                    }}\n                                    percent={90}\n                                />\n                            </Grid>\n                            <Grid container item xs={6} style={{textAlign:'center',position:'relative',right:'10%'}}>\n                                <h3 style={{fontWeight:800,textAlign:'center'}}>Your battery is under good condition</h3>\n                                <h4 style={{position:'relative',left:'10%', textAlign:'center'}}>Updated:{updated}</h4>\n                            </Grid>\n                        </Grid>\n                    </Card>\n                </Grid>\n                <Grid item xs={4}>\n                    <VoltageCard className={classes.card} data={props.voltage} latest={props.latest}/>\n                </Grid>\n                <Grid item xs={4}>\n                    <CurrentCard className={classes.card} data={props.current} latest={props.latest}/>\n                </Grid>\n                <Grid item xs={4}>\n                    <SOCCard className={classes.card} data={props.SOC} latest={props.latest}/>\n                </Grid>\n                <Grid item xs={4}>\n                    <SOHRCard className={classes.card} data={props.SOHR} latest={props.latest}/>\n                </Grid>\n                <Grid item xs={4}>\n                    <SOHCCard className={classes.card} data={props.SOHC} latest={props.latest}/>\n                </Grid>\n                <Grid item xs={4}>\n                    <Paper className={classes.paper}>\n                        <br></br>\n                        <p3>Visit Our Website For More Information</p3>\n                        <p3> research.ece.ncsu.edu/adac/sbg/</p3>\n                        <br></br>\n                        <br></br>\n                        <p3>Email Us: adac_lab@ncsu.edu </p3>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nexport default class Linechart extends PureComponent {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        showData:props.data,\n        refAreaLeft: '',\n        refAreaRight: '',\n        animation: true,\n        width: window.innerWidth,\n        height: window.innerHeight\n    }\n    this.key = props.showKey\n    this.x_arr = {}\n    for(var i = 0; i < props.data.length; i++) {\n      this.x_arr[this.data[i][this.keys[0]]] = i\n    }\n  }\n\n  componentWillReceiveProps(nextProps,nextContext){\n      this.setState({showData:nextProps.data})\n      this.key = nextProps.showKey\n  }\n\n  handleClick(){\n      console.log('select')\n  }\n\n  // Scaling\n    zoom() {\n        let { refAreaLeft, refAreaRight } = this.state;\n\n        if (refAreaLeft === refAreaRight || refAreaRight === '') {\n            this.setState(() => ({\n                refAreaLeft: '',\n                refAreaRight: '',\n            }));\n            return;\n        }\n\n        refAreaLeft = this.x_arr[refAreaLeft]\n        refAreaRight = this.x_arr[refAreaRight]\n\n        // xAxis domain\n        if (refAreaLeft > refAreaRight) [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n\n        this.setState(() => ({\n            refAreaLeft: '',\n            refAreaRight: '',\n            data: this.data.slice(refAreaLeft, refAreaRight + 1)\n        }));\n    }\n\n    zoomOut() {\n        const { data } = this.state;\n        this.setState(() => ({\n            data: this.initialState.data,\n            refAreaLeft: '',\n            refAreaRight: '',\n        }));\n    }\n\n  render() {\n      let {showData} = this.state\n      console.log(\"In linechart:\",this.data)\n      console.log(\"In linechart key:\",this.key)\n      let range = [0,100]\n      if (this.key=='voltage'){\n          range[0] = 705\n          range[1] = 706\n      }\n      else if (this.key == 'current'){\n          range[0] = -5\n          range[1] = 5\n      }\n    return (\n        <div>\n          <LineChart\n              width={800}\n              height={500}\n              data={showData}\n          >\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis dataKey=\"time\" />\n            <YAxis type=\"number\" domain={range}/>\n            <Tooltip onClick={this.handleClick.bind(this)}/>\n            <Legend />\n            <Line type=\"monotone\" dataKey={this.key} stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n            {/*<Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />*/}\n          </LineChart>\n        </div>\n\n    );\n  }\n}","import 'antd/dist/antd.css';\nimport { DatePicker } from 'antd';\nimport React, {PureComponent} from \"react\";\n\nexport default class TimePicker extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.data = props.data;\n        this.onOk = this.onOk.bind(this)\n    }\n\n    onChange(value, dateString) {\n        // console.log('Selected Time: ', value);\n        // console.log('Formatted Selected Time: ', dateString);\n    }\n\n    onOk(value) {\n        console.log('onOk: ', value);\n        this.props.callback(value);\n    }\n\n\n    render() {\n        const { RangePicker } = DatePicker;\n\n        return(\n            <RangePicker\n                showTime={{ format: 'HH' }}\n                format=\"YYYY-MM-DD HH:00\"\n                onChange={this.onChange}\n                onOk={this.onOk}\n            />\n        )\n\n}\n\n}\n\n","import React, { PureComponent } from 'react';\nimport {\n    Label, LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ReferenceArea, Legend,\n} from 'recharts';\nimport { Button } from 'antd';\n\n\nexport default class ZoomLineChart extends PureComponent {\n    // static jsfiddleUrl = 'https://jsfiddle.net/alidingling/nhpemhgs/';\n\n    constructor(props) {\n        super(props);\n        this.data = props.data\n        this.firstData = props.data\n        this.initialState = {\n            data:props.data,\n            refAreaLeft: '',\n            refAreaRight: '',\n            animation: true,\n        };\n        this.state = this.initialState;\n        this.key = props.showKey;\n        this.x_arr = {}\n        for (let i = 1; i<props.data.length;i++){\n            this.x_arr[props.data[i]['time']] = i\n        }\n        this.width = 0\n        if (document.body.clientWidth < 450){\n            this.width = document.body.clientWidth\n        }\n        else{\n            this.width = document.body.clientWidth*0.9\n        }\n        this.height = document.body.clientHeight*0.6\n\n        console.log(\"chart\",this.initialState['data'])\n        console.log(\"chart key\",props)\n        console.log(\"chart x_arr\", this.x_arr)\n    }\n\n    componentWillReceiveProps(nextProps,nextContext){\n        let newData = nextProps.data\n        this.initialState = {\n            data:newData,\n            refAreaLeft: '',\n            refAreaRight: '',\n            animation: true,\n        };\n        this.setState({\n            data:nextProps.data,\n            refAreaLeft: '',\n            refAreaRight: '',\n            animation: true,\n        })\n        this.key = nextProps.showKey\n        let next_arr = {}\n        for (let i = 1; i<newData.length;i++){\n            next_arr[newData[i]['time']] = i\n        }\n        this.x_arr = next_arr\n        this.data = newData\n        console.log(\"next_arr\", this.x_arr)\n    }\n\n    zoom() {\n        let { refAreaLeft, refAreaRight, data } = this.state;\n\n        if (refAreaLeft === refAreaRight || refAreaRight === '') {\n            this.setState(() => ({\n                refAreaLeft: '',\n                refAreaRight: '',\n            }));\n            return;\n        }\n\n        refAreaLeft = this.x_arr[refAreaLeft]\n        refAreaRight = this.x_arr[refAreaRight]\n\n        // xAxis domain\n        if (refAreaLeft > refAreaRight) [refAreaLeft, refAreaRight] = [refAreaRight, refAreaLeft];\n\n        this.setState(() => ({\n            refAreaLeft: '',\n            refAreaRight: '',\n            data: this.data.slice(refAreaLeft, refAreaRight + 1)\n        }));\n    }\n\n    zoomOut() {\n        const { data } = this.state;\n        this.setState(() => ({\n            data: this.initialState['data'],\n            refAreaLeft: '',\n            refAreaRight: '',\n        }));\n    }\n\n    back(){\n        this.setState(() => ({\n            data: this.firstData,\n            refAreaLeft: '',\n            refAreaRight: '',\n        }));\n        this.initialState['data'] = this.firstData\n    }\n\n    handleAreaLeft(e){\n        try{\n            this.setState({ refAreaLeft: e.activeLabel })\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    handleAreaRight(e){\n        try{\n            this.setState({ refAreaRight: e.activeLabel })\n        }\n        catch (err) {\n            console.log(err)\n        }\n    }\n\n    render() {\n        const {\n            data, left, right, refAreaLeft, refAreaRight\n        } = this.state;\n\n        let range = [0,100]\n        if (this.key=='voltage'){\n            range[0] = 705\n            range[1] = 706\n        }\n        else if (this.key == 'current'){\n            range[0] = -5\n            range[1] = 5\n        }\n\n        return (\n            <div className=\"highlight-bar-charts\" style={{ userSelect: 'none' }}>\n\n                {/*<button*/}\n                {/*    // href=\"javascript: void(0);\"*/}\n                {/*    className=\"btn update\"*/}\n                {/*    onClick={this.back.bind(this)}*/}\n                {/*    style={{position:'absolute',left:'90%'}}*/}\n                {/*>*/}\n                {/*    Refresh*/}\n                {/*</button>*/}\n\n                <LineChart\n                    width={this.width}\n                    height={this.height}\n                    data={data}\n                    onMouseDown={e => this.handleAreaLeft(e)}\n                    onMouseMove={e => this.state.refAreaLeft && this.handleAreaRight(e)}\n                    onMouseUp={this.zoom.bind(this)}\n                >\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis\n                        allowDecimals={false}\n                        dataKey=\"time\"\n                    />\n                    <YAxis type=\"number\" domain={range}/>\n                    <Tooltip />\n                    <Legend />\n                    <Line type=\"monotone\" dataKey={this.key} stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n                    {\n                        (refAreaLeft && refAreaRight) ? (\n                            <ReferenceArea x1={refAreaLeft} x2={refAreaRight} strokeOpacity={0.3} />) : null\n                    }\n                </LineChart>\n                <Button\n                    // href=\"javascript: void(0);\"\n                    className=\"btn update\"\n                    onClick={this.zoomOut.bind(this)}\n                    style={{position:'relative'}}\n                >\n                    Zoom Out\n\n                </Button>\n            </div>\n        );\n    }\n}\n","import React, {PureComponent} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Linechart from \"./lineChart\";\nimport TimePicker from \"./Picker\";\nimport { Button, Tooltip, Slider } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport moment from \"moment\"\nimport ZoomLineChart from \"./ZoomLineChart\";\nimport './ChartPaperCSS.css'\n\n\nexport default function ChartPaper(props) {\n    //const classes = useStyles();\n\n    // console.log(\"In chartPaper: \",props.voltage)\n    let data = props.location.state;\n    let len = data.length;\n    let iniData = data.slice(len-20,len)\n    let key = props.location.dataKey\n    let dateLength = data[0]['time'].length\n\n    // const initDataSetup=(d)=>{\n    //     let res = []\n    //     let arr = d.slice(len-20,len)\n    //     for (let i =0;i<arr.length;i++){\n    //         let temp = {}\n    //         temp['time'] = data[i]['time'].substr(1,dateLength-2).replace(/\\s/g,\"<br>\")\n    //         temp[key] = data[i][key]\n    //         res.push(temp)\n    //     }\n    //     console.log(\"after:\",res)\n    //     return res\n    // }\n\n    const [range,setRange] = React.useState(\"1min\")\n    const [date,setDate] = React.useState([])\n    const [showData,setShowData] = React.useState(iniData)\n    const dateFormat = \"YYYY-MM-DD HH:mm:ss\"\n\n\n\n    const getDate=(d)=>{\n        console.log(\"selected range is\",d)\n        //setDate(d)\n        const newData=[]\n            // console.log(\"choose:\",date)\n\n            // console.log(\"lb\",lb)\n\n            //console.log(data)\n            // let lb = date.subtract(1,'minutes').toDate();\n            // let ub = date.add(1,'minutes').toDate()\n            let lb = d[0]\n            let ub = d[1]\n            let flag = false\n            for (let i = 0;i<len;i++){\n                if (flag == true){\n                    break\n                }\n                let m = moment(data[i]['time'].substr(1,dateLength-2),dateFormat)\n                // console.log(m)\n                // console.log(\"lb\",lb)\n                // console.log(m.isAfter(lb))\n                // console.log(\"ub\",ub)\n                // console.log(m.isBefore(ub))\n                if (m.isAfter(lb)){\n                    if (m.isBefore(ub)) {\n                        let temp = {}\n                        temp['time'] = data[i]['time'].substr(1,dateLength-2).replace(/\\s/g,\"\\n\")\n                        temp[key] = data[i][key]\n                        newData.push(temp)\n                        // newData.push(data[i])\n                    }\n                    else{\n                        flag = true\n                    }\n                }\n            }\n            console.log(\"newData is :\",newData)\n        setShowData(newData)\n\n    }\n\n    const getRange=(r)=>{\n        setRange(r)\n    }\n\n\n    const onclick=()=>{\n        // const newData=[]\n        // if (date == []){\n        //     if (range == \"5min\"){\n        //         for (let i = len-100; i<len;i++){\n        //             newData.push(data[i])\n        //         }\n        //     }\n        // }\n        // else {\n        //     // console.log(\"choose:\",date)\n        //     let dateLength = data[0]['time'].length\n        //\n        //     // console.log(\"lb\",lb)\n        //\n        //     //console.log(data)\n        //     // let lb = date.subtract(1,'minutes').toDate();\n        //     // let ub = date.add(1,'minutes').toDate()\n        //     let lb = date[0]\n        //     let ub = date[1]\n        //     let flag = false\n        //     for (let i = 0;i<len;i++){\n        //         if (flag == true){\n        //             break\n        //         }\n        //         let m = moment(data[i]['time'].substr(1,dateLength-2),dateFormat)\n        //         // console.log(m)\n        //         // console.log(\"lb\",lb)\n        //         // console.log(m.isAfter(lb))\n        //         // console.log(\"ub\",ub)\n        //         // console.log(m.isBefore(ub))\n        //         if (m.isAfter(lb)){\n        //             if (m.isBefore(ub)) {\n        //                 newData.push(data[i])\n        //             }\n        //             else{\n        //                 flag = true\n        //             }\n        //         }\n        //     }\n        // console.log(\"newData is :\",newData)\n        // }\n        // setShowData(newData)\n    }\n\n    return (\n        <div id='chart'>\n                {/*<div>*/}\n                {/*    <TimePicker callback={getDate}/>*/}\n                {/*</div>*/}\n                <ZoomLineChart  data={showData} showKey={key}/>\n        </div>\n    )\n}","import React from 'react';\nimport { Row, Col, Slider } from 'antd';\nimport './contentCSS.css'\nimport 'antd/dist/antd.css';\nimport CenteredGrid from \"./ContentGrid\";\nimport Linechart from \"./lineChart\";\nimport ChartPaper from \"./ChartPaper\";\n\nfunction ContentPage(props){\n\n    //console.log(\"In Content: \",props.latest)\n    console.log(\"In Content: \",props.voltageData)\n    return(\n        <div>\n            <CenteredGrid latest={props.latest} current={props.currentData} voltage={props.voltageData} SOC={props.SOCData}\n                          SOHR={props.SOHRData} SOHC={props.SOHCData} style={{position:'fixed',zIndex:10}}/>\n\n        </div>\n    );\n}\nexport default ContentPage;","import React, {PureComponent} from 'react';\nimport {Layout, Menu, Breadcrumb, Progress} from 'antd';\nimport './dashboardCSS.css'\nimport ContentPage from \"./Content\";\nimport Grid from \"@material-ui/core/Grid\";\nimport VoltageCard from \"./Voltage\";\nimport CurrentCard from \"./current\";\nimport SOCCard from \"./SOC\";\nimport SOHRCard from \"./SOHR\";\nimport SOHCCard from \"./SOHC\";\nimport TimePicker from \"./Picker\";\nimport {Battery} from 'react-little-icon'\nimport moment from \"moment\";\n\n\n\nexport default class Dashboard extends PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state={\n            bound:[],\n            isLoading:false,\n            latestData:{},\n            voltage:[],\n            current:[],\n            SOC:[],\n            SOHR:[],\n            SOHC:[],\n        }\n    }\n\n    componentWillMount() {\n        this.setState({isLoading: true})\n        let temp = {}\n        let voltageData=[]\n        let currentData=[]\n        let SOCData = []\n        let SOHRData = []\n        let SOHCData = []\n\n        fetch(\"/BMS_Realtime_output.csv\")\n            .then(v => v.text())\n            .then(data => {\n                //console.log(data)\n\n                let lines = data.split(\"\\n\")\n                let len = lines.length\n\n                this.setState({dataLines:lines})\n\n                // Latest data\n                let lastCell = lines[len - 1].split(\",\")\n                console.log(lastCell)\n                temp = {\n                    time: lastCell[0],\n                    voltage: lastCell[1],\n                    current: lastCell[2],\n                    SOC: lastCell[3],\n                    SOHR: lastCell[4],\n                    SOHC: lastCell[5],\n                }\n                console.log(temp)\n                this.setState({latestData: temp})\n\n                // Voltage data\n                // Default is last 6000 data (pass 5 hours)\n                for(let i = 1;i<len;i++){\n                    let obj = {}\n                    let obj2 = {}\n                    let obj3 = {}\n                    let obj4 = {}\n                    let obj5 = {}\n\n                    let cells = lines[i].split(\",\")\n                    //let l = cells[0].length\n                    obj['time']=cells[0]\n                    obj['voltage']=parseFloat(cells[1])\n                    obj2['time'] = cells[0]\n                    obj2['current']=parseFloat(cells[2])\n                    obj3['time'] = cells[0]\n                    obj3['SOC']=parseFloat(cells[3])\n                    obj4['time'] = cells[0]\n                    obj4['SOHR']=parseFloat(cells[4])\n                    obj5['time'] = cells[0]\n                    obj5['SOHC']=parseFloat(cells[5])\n                    voltageData.push(obj)\n                    currentData.push(obj2)\n                    SOCData.push(obj3)\n                    SOHRData.push(obj4)\n                    SOHCData.push(obj5)\n                }\n                JSON.stringify(voltageData)\n                JSON.stringify(currentData)\n                console.log(voltageData)\n                this.setState({voltage:voltageData, current:currentData, SOC:SOCData, SOHR:SOHRData, SOHC:SOHCData})\n                this.setState({isLoading:false})\n            })\n    }\n\n    getData(d) {\n        // change latestData (Showing the immediate data at the time selected)\n        this.setState({bound:d})\n    }\n\n\n    render() {\n        let {latestData,isLoading,voltage,current,SOC,SOHR,SOHC} = this.state\n        if (isLoading){\n            return(\n                <div>Please Wait</div>\n            )\n        }\n        else {\n            let updated = latestData['time'];\n            const len = updated.length;\n            updated = updated.substr(1,len-2);\n\n            return (\n                <div id='content'>\n                    <Grid container spacing={3}>\n                        <Grid item lg={12} md={12} xs={12}>\n\n                            {/*<Progress*/}\n                            {/*    type=\"circle\"*/}\n                            {/*    strokeColor={{*/}\n                            {/*        '0%': '#108ee9',*/}\n                            {/*        '100%': '#87d068',*/}\n                            {/*    }}*/}\n                            {/*    width={140}*/}\n                            {/*    percent={parseFloat(latestData['SOC']).toFixed(2)}*/}\n                            {/*/>*/}\n                            <Battery\n                                size={180}\n                                percent={parseFloat(latestData['SOC']).toFixed(2)}\n                                color=\"rgb(46,139,87)\"\n                            ></Battery>\n                            <br></br>\n                            <h3 style={{fontWeight:800,textAlign:'center'}}>Your battery is under good condition</h3>\n                            <h4 style={{textAlign:'center'}}>Updated:{updated}</h4>\n                        </Grid>\n\n                        <Grid item lg={12} md={12} xs={12}>\n                            <TimePicker callback={this.getData}></TimePicker>\n                        </Grid>\n\n                        <Grid item lg={4} md={8} xs={12}>\n                            <VoltageCard  data={voltage} latest={latestData}/>\n                        </Grid>\n                        <Grid item lg={4} md={8} xs={12}>\n                            <CurrentCard  data={current} latest={latestData}/>\n                        </Grid>\n                        <Grid item lg={4} md={8} xs={12}>\n                            <SOCCard  data={SOC} latest={latestData}/>\n                        </Grid>\n                        <Grid item lg={4} md={8} xs={12}>\n                            <SOHRCard  data={SOHR} latest={latestData}/>\n                        </Grid>\n                        <Grid item lg={4} md={8} xs={12}>\n                            <SOHCCard  data={SOHC} latest={latestData}/>\n                        </Grid>\n                        <Grid item lg={4} md={8} xs={12}>\n                            <Grid id=\"footer\" container spacing={1}>\n                                <Grid item lg={9} md={9} xs={9}>\n                                    <div >\n                                        <h3 className=\"info\">\n                                            The Smart Battery Gauge\n                                        </h3>\n                                        <h3 className=\"info\">\n                                            North Carolina State University - ADAC LAB -\n                                        </h3>\n                                        <br></br>\n                                        <h3 className=\"info\">\n                                            © 2020\n                                        </h3>\n                                    </div>\n                                </Grid>\n                                <Grid item lg={3} md={3} xs={3}>\n                                    <div>\n                                        <div id='pic'>\n                                            <a href=\"https://research.ece.ncsu.edu/adac/\" title=\"Click to visit the offical website\"><img id=\"logo\" src='/ADAC_logo.jpg'/></a>\n                                        </div>\n                                    </div>\n                                </Grid>\n                            </Grid>\n\n                        </Grid>\n                    </Grid>\n                </div>\n            )\n        }\n    }\n}","import React from 'react';\nimport './App.css';\nimport 'antd/dist/antd.css';\nimport Dashboard from \"./dashboard\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n        <Dashboard />\n      {/*<header className=\"App-header\">*/}\n      {/*  <img src={logo} className=\"App-logo\" alt=\"logo\" />*/}\n      {/*  <p>*/}\n      {/*    Edit <code>src/App.js</code> and save to reload.*/}\n      {/*  </p>*/}\n      {/*  <a*/}\n      {/*    className=\"App-link\"*/}\n      {/*    href=\"https://reactjs.org\"*/}\n      {/*    target=\"_blank\"*/}\n      {/*    rel=\"noopener noreferrer\"*/}\n      {/*  >*/}\n      {/*    Learn React*/}\n      {/*  </a>*/}\n      {/*</header>*/}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Component } from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport history from './History'\nimport App from \"./App\";\nimport ChartPaper from \"./ChartPaper\";\n\nexport default class Routes extends Component {\n    render() {\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route path=\"/\" exact component={App} />\n                    <Route path=\"/Chart\" component={ChartPaper} />\n                </Switch>\n            </Router>\n        )\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport Routes from './Routes'\n\nReactDOM.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  // document.getElementById('root')\n    <Router>\n        <div>\n            <Routes />\n        </div>\n    </Router>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}